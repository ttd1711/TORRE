package com.dzung.torre.opportunity.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.dzung.torre.opportunity.object.OpportunityApiObj;
import com.dzung.torre.opportunity.object.OpportunitiesApiObj;
import com.dzung.torre.opportunity.object.OpportunitySearchRequest;
import com.dzung.torre.opportunity.properties.TorreProperties;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class OpportunityService {

	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private TorreProperties torreProperties;
	
	public OpportunitiesApiObj findOpportunities(OpportunitySearchRequest opportunityRequest) {
		OpportunitiesApiObj retObj = null;
		
		String apiUrl = torreProperties.getPeopleSearchApiUrl();
		log.info("[findOpportunities] find opportunities by calling API {}", apiUrl);
		
		try {
			if(this.validateSearchCriteria(opportunityRequest)) {
				String apiFullUrl = apiUrl + "?" 
						+ "offset=" + opportunityRequest.getOffset()
						+ "&size=" + opportunityRequest.getSize()
						+ "&aggregate=" + opportunityRequest.isAggregate();
				log.info("[findPeople] API = {}", apiFullUrl);
				
				//set header to json
				HttpHeaders headers = new HttpHeaders();
				headers.setContentType(MediaType.APPLICATION_JSON);
				//call API
				retObj = 
						restTemplate.postForObject(apiFullUrl, new HttpEntity<>(null, headers), OpportunitiesApiObj.class);
				//
				log.info("API Result: " + retObj.toString());
			}
		}
		catch(Exception ex) {
			log.error("Exception: {}", ex.getMessage());
		}
				
		
		return retObj;
	}

	/*
	 *  search criteria validation
	 */
	private boolean validateSearchCriteria(OpportunitySearchRequest peopleRequest) {
		boolean ret = true;
		
		try {
			//check username empty or null
			if(peopleRequest.getOffset()<0) {
				ret = false; 
			}
			else if(peopleRequest.getSize()<0) {
				ret = false; 
			}
		}
		catch(Exception ex) {
			log.error("Exception: {}", ex.getMessage());
		}
		finally{
			log.info("[validateSearchCriteria] result = ", ret);
			
		}
		
		return ret;
	}
}
